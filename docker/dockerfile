FROM nvidia/cuda:11.7.1-devel-ubuntu22.04
ARG DEBIAN_FRONTEND=noninteractive
COPY DetectorFreeSfM/requirements.txt .
COPY DetectorFreeSfM/environment.yaml .

RUN apt-get update && apt-get install -y \
	wget 
RUN wget https://repo.anaconda.com/archive/Anaconda3-2024.10-1-Linux-x86_64.sh && \
	bash Anaconda3-2024.10-1-Linux-x86_64.sh -b

RUN /root/anaconda3/bin/conda env create -f environment.yaml
COPY DetectorFreeSfM/third_party third_party
SHELL ["/root/anaconda3/bin/conda", "run", "-n", "detectorfreesfm", "/bin/bash", "-c"]
WORKDIR third_party/RoIAlign.pytorch
RUN pip install .

RUN apt-get install -y git \
    	cmake \
    	build-essential \
    	libboost-program-options-dev \
    	libboost-filesystem-dev \
    	libboost-graph-dev \
    	libboost-system-dev \
    	libboost-test-dev \
    	libeigen3-dev \
    	libsuitesparse-dev \
    	libfreeimage-dev \
        libgoogle-glog-dev \
    	libgflags-dev \
    	libglew-dev \
    	qtbase5-dev \
    	libqt5opengl5-dev \
    	libcgal-dev \
		libmetis-dev \
    	&& apt-get install -y libcgal-qt5-dev \
        && apt-get install -y libatlas-base-dev libsuitesparse-dev
WORKDIR /
RUN git clone https://github.com/ceres-solver/ceres-solver.git -b 1.14.x
RUN mkdir ceres-solver/build && \
	cmake -B ceres-solver/build -S ceres-solver -DBUILD_TESTING=OFF -DBUILD_EXAMPLES=OFF && \
	make -C ceres-solver/build -j8 && \
	make -C ceres-solver/build install


RUN git clone https://github.com/hxy-123/colmap.git

RUN apt-get install -y \
	g++-10 \
	gcc-10

RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 && \
	update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100

SHELL ["/bin/bash", "-c"]
RUN mkdir colmap/build && \
	cmake -B colmap/build -S colmap -DCMAKE_PREFIX_PATH=/root/anaconda3/envs/detectorfreesfm/lib -DCUDA_ENABLED=ON  -DCUDA_NVCC_FLAGS="--std c++14"
RUN make -C colmap/build -j8
RUN make -C colmap/build install

SHELL ["/root/anaconda3/bin/conda", "run", "-n", "detectorfreesfm", "/bin/bash", "-c"]

RUN pip uninstall opencv-python opencv-python-headless --yes --quiet
RUN pip install albumentations opencv-python --no-input --quiet
RUN conda init 
RUN echo "conda activate detectorfreesfm" >> /root/.bashrc

WORKDIR /DetectorFreeSfM

